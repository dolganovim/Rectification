unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.StdCtrls,
  VclTee.TeeGDIPlus, VCLTee.TeEngine, VCLTee.Series, VCLTee.TeeProcs,
  VCLTee.Chart, Unit2, Vcl.Grids, Math;

type

  TCubeCol = class
     Rashodi: record            //моль/сек
       F: double;  // питание
       W: double;  // отбор куба
       V: double;  // паровой поток из куба
       L: double;  // жидкий поток в куб
       N: double;  // количество вещества в кубе
     end;
     Teplota: record
       Q_F: double;  // теплота питание
       Q_W: double;  // теплота отбор куба
       Q_V: double;  // теплота паровой поток из куба
       Q_L: double;  // теплота жидкий поток в куб
       Q_N: double;  // теплота количество вещества в кубе

       Cp_F: double;  // теплоемкость питание
       Cp_W: double;  // теплоемкость отбор куба
       Cp_V: double;  // теплоемкость паровой поток из куба
       Cp_L: double;  // теплоемкость жидкий поток в куб
       Cp_N: double;  // теплоемкость количество вещества в кубе

       T_F: double;  // температура питание
       T_W: double;  // температура отбор куба
       T_V: double;  // температура паровой поток из куба
       T_L: double;  // температура жидкий поток в куб
     end;
     Sostavi: record              //моль/моль
       zF: TArrOfDouble;  // питание
       xW: TArrOfDouble;  // отбор куба
       yV: TArrOfDouble;  // паровой поток из куба
       xL: TArrOfDouble;  // жидкий поток в куб
       zN: TArrOfDouble;  // количество вещества в кубе
     end;
     Geometry: record     //м
       Diam: double;  // диаметр куба
       High: double;  // Высота куба

     end;
     LevelCurrent: double;  // уровень текущий в кубе  %
     LevelUst: double;  // уровень уставка в кубе       %
     LevelK: double;  // коэффициент пропорциональности

     T: double;  // температура в кубе     К
     P: double;  // давление в кубе        Па
     dt: double;  // шаг по времени        сек

     procedure SetSostavi(
       zF: TArrOfDouble;  // питание
       xW: TArrOfDouble;  // отбор куба
       yV: TArrOfDouble;  // паровой поток из куба
       xL: TArrOfDouble;  // жидкий поток в куб
       zN: TArrOfDouble);
     procedure SetRashodi(
       F: double;  // питание
       W: double;  // отбор куба
       V: double;  // паровой поток из куба
       L: double;  // жидкий поток в куб
       N: double  // количество вещества в кубе
       );
     procedure SetGeometry(
        Diam: double;  // диаметр куба
        High: double  // Высота куба
      );

     procedure SetAutomat(
        LevelUst: double;  // уровень уставка в кубе       %
        LevelK: double;  // коэффициент пропорциональности
        dt: double       // шаг интегрирования
     );
     procedure SetTechParam(
        _T: double;  // температура в кубе     К
        _P: double;  // давление в кубе        Па
        T_F: double;  // температура питание
        T_W: double;  // температура отбор куба
        T_V: double;  // температура паровой поток из куба
        T_L: double  // температура жидкий поток в куб
     );

     procedure BalanceMaterial; //расчет материального баланса
     procedure CalcLevel;     // расчет уровня жидкости
     function getPl: double;  // плотность молярная жидкости в кубе
     procedure RecalcVapour; // пересчитать расход пара по регулятору
     procedure ExecuteAp;  // произвести расчет
     procedure BalanceTeplot; // расчет теплового баланса


  end;


  TForm1 = class(TForm)
    ShCube: TShape;
    ShLevel: TShape;
    Button1: TButton;
    Timer1: TTimer;
    EdF: TEdit;
    Label1: TLabel;
    EdV: TEdit;
    Label2: TLabel;
    EdL: TEdit;
    Label3: TLabel;
    EdN: TEdit;
    Label4: TLabel;
    EdW: TEdit;
    Label5: TLabel;
    LabProc: TLabel;
    Chart1: TChart;
    Series1: TLineSeries;
    EdUst: TEdit;
    Label6: TLabel;
    Button2: TButton;
    EdT: TEdit;
    Label7: TLabel;
    EdP: TEdit;
    Label8: TLabel;
    StringGrid1: TStringGrid;
    Label9: TLabel;
    EdT_F: TEdit;
    Label10: TLabel;
    EdT_W: TEdit;
    Label11: TLabel;
    EdT_L: TEdit;
    Label12: TLabel;
    EdT_V: TEdit;
    procedure Button1Click(Sender: TObject);
    procedure Timer1Timer(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;
  CubeCol: TCubeCol;
  n: integer;
implementation

{$R *.dfm}

{ TCubeCol }

procedure TCubeCol.BalanceMaterial;
var
  i: integer;
  N_old: double;
  FazeSost:TFazeSost;
begin
  N_old:=Rashodi.N;
  //пересчет общих расходов
  with Rashodi do
    N:=N+(F-W+L-V)*dt;
  // пересчет составов внутри
  with Sostavi do
  begin
    for I := 0 to Length(zN)-1 do
    begin
      with Rashodi do
        zN[i]:=(zN[i]*N_old+(zF[i]*F-
                  xW[i]*W+xL[i]*L-yV[i]*V)*dt)/N;

    end;
  end;
  //пересчет состава по равновесию
  FazeSost:=TFazeSost.Create;
  FazeSost.Calculation(T, P, Sostavi.zN, Rashodi.N, Rashodi.W, Rashodi.V, Sostavi.xW, Sostavi.yV);
  FazeSost.Free;

  //тепловой баланс
  BalanceTeplot;

end;

procedure TCubeCol.BalanceTeplot;
var
  TermoPak:TTermoPak;
begin
  TermoPak:=TTermoPak.Create;
  with Teplota do
  begin
    T:=T+273.15;
    T_F:=T_F+273.15;
    T_L:=T_l+273.15;
    T_W:=T_W+273.15;
    T_V:=T_V+273.15;


    Q_N:=Rashodi.N*T*TermoPak.GetCp(Sostavi.zN, T);
    Q_F:=Rashodi.F*T_F*TermoPak.GetCp(Sostavi.zF,T_F);
    Q_L:=Rashodi.L*T_L*TermoPak.GetCp(Sostavi.xL,T_L);
    Q_W:=Rashodi.W*T_W*TermoPak.GetCp(Sostavi.xW,T_W);
    Q_V:=Rashodi.V*T_V*TermoPak.GetCp(Sostavi.yV,T_V);
    T:=(Q_N+(Q_F+Q_L-Q_W-Q_V)*dt)/(Rashodi.N*TermoPak.GetCp(Sostavi.zN, T));
    T_W:=T;
    T_V:=T;
  end;
  TermoPak.Free;
end;

procedure TCubeCol.CalcLevel;
var
  Vc: double; // объем куба
  Vzh: double; // объем жидкости в кубе
begin
  with Geometry do
    Vc:=High*3.14*Diam*Diam/4;

  // тут надо знать жидкость, т.е. после пересчета фазового состояния
  Vzh:=Rashodi.N/getPl;
  LevelCurrent:=Vzh/Vc*100; //в %

end;

procedure TCubeCol.ExecuteAp;
begin
  BalanceMaterial;
  CalcLevel;
  RecalcVapour;
end;

function TCubeCol.getPl: double;
begin
  result:=1;
end;

procedure TCubeCol.RecalcVapour;
begin
  with Rashodi do
  begin
    V:=F-W+L;
    V:=V*(1-LevelK*(LevelUst-LevelCurrent)/LevelUst);
  end;
end;

procedure TCubeCol.SetAutomat(LevelUst, LevelK, dt: double);
begin
  self.LevelUst:=LevelUst;
  self.LevelK:=LevelK;
  self.dt:=dt;
end;

procedure TCubeCol.SetGeometry(Diam, High: double);
begin
  self.Geometry.Diam:=Diam;
  self.Geometry.High:=High;
end;

procedure TCubeCol.SetRashodi(F, W, V, L, N: double);
begin
  self.Rashodi.F:=F;
  self.Rashodi.W:=W;
  self.Rashodi.V:=V;
  self.Rashodi.L:=L;
  self.Rashodi.N:=N;

end;

procedure TCubeCol.SetSostavi(zF, xW, yV, xL, zN: TArrOfDouble);
var
  i: integer;
begin
  SetLength(self.Sostavi.zF, Length(zF));
  SetLength(self.Sostavi.xW, Length(xW));
  SetLength(self.Sostavi.yV, Length(yV));
  SetLength(self.Sostavi.xL, Length(xL));
  SetLength(self.Sostavi.zN, Length(zN));

  for I := 0 to Length(zF)-1 do
  begin
    self.Sostavi.zF[i]:=zF[i];
    self.Sostavi.xW[i]:=xW[i];
    self.Sostavi.yV[i]:=yV[i];
    self.Sostavi.xL[i]:=xL[i];
    self.Sostavi.zN[i]:=zN[i];
  end;

end;

procedure TCubeCol.SetTechParam(_T, _P: double; T_F: double;  // температура питание
        T_W: double;  // температура отбор куба
        T_V: double;  // температура паровой поток из куба
        T_L: double  // температура жидкий поток в куб);
        );
begin
  T:=_T;
  P:=_P;
  Self.Teplota.T_F:=T_F;
  Self.Teplota.T_W:=T_W;
  Self.Teplota.T_V:=T_V;
  Self.Teplota.T_L:=T_L;

end;

procedure TForm1.Button1Click(Sender: TObject);
var
  zF: TArrOfDouble;  // питание
  xW: TArrOfDouble;  // отбор куба
  yV: TArrOfDouble;  // паровой поток из куба
  xL: TArrOfDouble;  // жидкий поток в куб
  zN: TArrOfDouble;  // количество вещества в кубе
  i: integer;
begin
  SetLength(zF, 39);
  SetLength(xW, 39);
  SetLength(yV, 39);
  SetLength(xL, 39);
  SetLength(zN, 39);
  for I := 0 to 38 do
  begin
    zF[i]:=StrToFloat(FSosAlkConst[i+1,2]);
    xW[i]:=StrToFloat(FSosAlkConst[i+1,2]);
    yV[i]:=StrToFloat(FSosAlkConst[i+1,2]);
    xL[i]:=StrToFloat(FSosAlkConst[i+1,2]);
    zN[i]:=StrToFloat(FSosAlkConst[i+1,2]);
  end;

  CubeCol:= TCubeCol.Create;
  CubeCol.T:=45;
  CubeCol.P:=100000;
  CubeCol.SetSostavi(zF, xW, yV, xL, zN);
  CubeCol.SetRashodi(140,10,15,10,40);
  CubeCol.SetGeometry(6,10);
  CubeCol.SetAutomat(50,5,0.1);
  CubeCol.ExecuteAp;
  Timer1.Enabled:=true;
  Chart1.Series[0].Clear;
  n:=0;
end;

procedure TForm1.Timer1Timer(Sender: TObject);
var
  i,j: integer;
  sum1, sum2, sum3: double;
begin
  CubeCol.SetAutomat(StrToFloat(EdUst.Text), 0.1,0.05);
  CubeCol.SetRashodi(StrToFloat(EdF.Text),StrToFloat(EdW.Text),StrToFloat(EdV.Text),StrToFloat(EdL.Text),StrToFloat(EdN.Text));
  CubeCol.SetTechParam(StrToFloat(EdT.Text), StrToFloat(EdP.Text), StrToFloat(EdT_F.Text),
                       StrToFloat(EdT_W.Text), StrToFloat(EdT_V.Text), StrToFloat(EdT_L.Text));
  CubeCol.ExecuteAp;
  EdN.Text:=FloatToStr(CubeCol.Rashodi.N);
  EdV.Text:=FloatToStr(CubeCol.Rashodi.V);
  EdW.Text:=FloatToStr(CubeCol.Rashodi.W);
  EdT.Text:=FloatToStr(CubeCol.T-273.15);
  EdT_W.Text:=FloatToStr(CubeCol.Teplota.T_W-273.15);
  EdT_V.Text:=FloatToStr(CubeCol.Teplota.T_V-273.15);

  ShLevel.Height:=trunc(ShCube.Height*CubeCol.LevelCurrent/100);
  ShLevel.Top:=ShCube.Top+ShCube.Height-ShLevel.Height;
  LabProc.Caption:=FloatToStr(roundto(CubeCol.LevelCurrent,-1));
  LabProc.Top:=ShLevel.Top-20;
  n:=n+1;
  Chart1.Series[0].AddXY(n,CubeCol.LevelCurrent);

  StringGrid1.Cells[0,0]:='Компонент';
  StringGrid1.Cells[1,0]:='В кубе';
  StringGrid1.Cells[2,0]:='Жидкость';
  StringGrid1.Cells[3,0]:='Пар';
  for I := 1 to 39 do
  begin
    StringGrid1.Cells[0,i]:= FProperConst[i,1];
  end;
  sum1:=0;
  sum2:=0;
  sum3:=0;

  //вывод составов
  for I := 0 to 39 do
  begin
    StringGrid1.Cells[1,i+1]:= FloatToStr(CubeCol.Sostavi.zN[i]);
    sum1:=sum1+CubeCol.Sostavi.zN[i];
    StringGrid1.Cells[2,i+1]:= FloatToStr(CubeCol.Sostavi.xW[i]);
    sum2:=sum2+CubeCol.Sostavi.xW[i];
    StringGrid1.Cells[3,i+1]:= FloatToStr(CubeCol.Sostavi.yV[i]);
    sum3:=sum3+CubeCol.Sostavi.yV[i];
  end;
  StringGrid1.Cells[0,40]:='Сумма';
  StringGrid1.Cells[1,40]:=FloatToStr(sum1);
  StringGrid1.Cells[2,40]:=FloatToStr(sum2);
  StringGrid1.Cells[3,40]:=FloatToStr(sum3);


end;

end.
